//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;

public class CommandManager
{
	//public static readonly CommandManager instance= new CommandManager();
	private static CommandManager _instance;

	public static CommandManager getInstance()
	{
		if ( _instance == null )
		{
			_instance = new CommandManager();
		}
		return _instance;
	}

	private Dictionary<int,List<ICommand>> _commandsMap;

	public CommandManager ()
	{
		this._commandsMap = new Dictionary<int, List<ICommand>> ();
	}

	public void addCommand(int cmdNum,ICommand command)
	{
		List<ICommand> list;
		if (!this._commandsMap.ContainsKey (cmdNum)) 
		{
			list = new List<ICommand> ();
			this._commandsMap.Add (cmdNum, list);
		} 
		else 
		{
			list = this._commandsMap[cmdNum];
		}
		if (list.IndexOf (command) == -1) 
		{
			list.Add (command);
		}
	}

	public void removeCommand(int cmdNum,ICommand command)
	{
		List<ICommand> list;
		if (this._commandsMap.ContainsKey(cmdNum)) 
		{
			list = this._commandsMap [cmdNum];
			int index = list.IndexOf(command);
			if ( index != -1 )
			{
				list[index] = null;
			}
		}
	}

	public void runCommand(int cmdNum,params object[] args)
	{
		List<ICommand> list;
		if (this._commandsMap.ContainsKey(cmdNum)) 
		{
			list = this._commandsMap [cmdNum];
			int i,j,len;
			ICommand command;
			len = list.Count;
			for (i=0;i<len;i++)
			{
				if ( list[i] == null )
				{
					for (j=i+1;j<len;j++)
					{
						if ( list[j] != null )
						{
							list[i] = list[j];
							list[j] = null;
						}
					}
				}
				command = list[i];
				if ( command == null )
				{
					break;
				}
				command.recvCommand(cmdNum,args);
			}
			if ( i!= len )
			{
				list.RemoveRange(i,len-1);
			}
		}
	}
}

